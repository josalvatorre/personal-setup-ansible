---
- name: Set up ubuntus
  hosts: ubuntus
  vars:
    home_directory: /home/josalvatorre
    code_directory: "{{ home_directory }}/code"
    nvim_config_directory: "{{ home_directory }}/.config/nvim"

  tasks:

  - name: Install apt latest packages
    become: yes
    become_user: root
    ansible.builtin.apt:
      state: latest
      update_cache: true
      name:
      - ripgrep
      - tmux
      - tree
      - xclip
      # Pyenv packages for building pythons
      # https://github.com/pyenv/pyenv/blob/6e3b91a816e5551d646211b71749addffefb0c15/README.md?plain=1#L379-L384
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - curl
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev

  - name: Install snaps
    become: yes
    become_user: root
    community.general.snap:
      name:
      - tldr

  - name: Install classic snaps
    become: yes
    become_user: root
    community.general.snap:
      # We use classic to deactivate the restricted environment that snaps normally run in.
      # This is normal for IDE's, which need generous access to the host machine.
      classic: true
      name:
      - node
      - nvim

  - name: Install pyenv
    ansible.builtin.git:
      repo: https://github.com/pyenv/pyenv.git
      dest: "{{ home_directory }}/.pyenv"
      accept_hostkey: true

  - name: Install NVM
    ansible.builtin.git:
      repo: https://github.com/nvm-sh/nvm.git
      dest: "{{ home_directory }}/.nvim"
      accept_hostkey: true

  # I wanted direnv, but apt has an old version that's missing critical features.
  # The build-from-source option for direnv is complicated.
  # It might make sense to switch over once 2.32.1 makes it into ubuntu.
  # However, ain't nobody got time for that.
  - name: Install autoenv
    ansible.builtin.git:
      repo: https://github.com/hyperupcall/autoenv.git
      dest: "{{ home_directory }}/.autoenv"
      accept_hostkey: true

  - name: Install Neovim config
    ansible.builtin.git:
      repo: git@github.com:josalvatorre/personal-neovim-config.git
      dest: "{{ nvim_config_directory }}"
      accept_hostkey: true
      force: true

  - name: Install monorepo-alpha
    ansible.builtin.git:
      repo: git@github.com:josalvatorre/monorepo-alpha.git
      dest: "{{ code_directory }}/monorepo-alpha"
      accept_hostkey: true
    # This task fails if there are local changes. That's fine.
    ignore_errors: true
