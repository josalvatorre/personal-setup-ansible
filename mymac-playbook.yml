---
- name: Set up my local Mac
  hosts: mymac
  vars:
    home_directory: /Users/josalvatorre
    code_directory: "{{ home_directory }}/code"
    nvim_config_directory: "{{ home_directory }}/.config/nvim"
    homebrew_packages:
    - 1password-cli
    - autoenv  # This has post-installation steps.
    - bazelisk
    - gh
    - gnu-sed
    - hudochenkov/sshpass/sshpass
    - jq
    - neovim
    - node
    - pyenv  # This has post-installation steps.
    - ripgrep
    - tldr
    - tree

  tasks:

  - name: Install Homebrew packages
    community.general.homebrew:
      update_homebrew: true
      upgrade_all: true
      name: "{{ item }}"
    # We loop because the module seems to fail at the first package even with the hack below.
    loop: "{{ homebrew_packages }}"
    # Homebrew print a warning if the package is already installed when you try to upgrade.
    # Unfortunately, the Ansible module sees this as an error and fails.
    # The following hack is meant to mitigate that.
    register: homebrew_result
    failed_when:
      - homebrew_result.failed
      - "'Warning: Not upgrading' not in homebrew_result.msg"

  - name: Install Neovim config
    ansible.builtin.git:
      repo: git@github.com:josalvatorre/personal-neovim-config.git
      dest: "{{ nvim_config_directory }}"
      force: true

  - name: Install monorepo-alpha
    ansible.builtin.git:
      repo: git@github.com:josalvatorre/monorepo-alpha.git
      dest: "{{ code_directory }}/monorepo-alpha"
    # This task fails if there are local changes. That's fine.
    ignore_errors: true
